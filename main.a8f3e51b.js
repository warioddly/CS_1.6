(()=>{"use strict";var e,t={828:(e,t,n)=>{var o=new(n(963).x),i=n(686),r=n(6),a=new i.C({antialias:!0});a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight),a.shadowMap.enabled=!0,a.shadowMap.type=r.dwk,a.toneMapping=r.LY2;var c=new(n(96).c)(75,window.innerWidth/window.innerHeight,.1,1e3);c.rotation.order="YXZ";var s=new(n(660).S),d=new(n(79).Z);document.body.appendChild(d.dom);var l,u={scene:o,renderer:a,camera:c,clock:s,stats:d,octree:new(n(427).V),configs:{player:{speed:.1,jumpSpeed:.2}},update:function(e){this.renderer.render(this.scene,this.camera),this.stats.update()}},p=n(532),h=n(524),y=function(){function e(){}return e.getSideVector=function(e,t,n){return e.getWorldDirection(t),t.y=0,t.normalize(),t.cross(e.up),t.multiplyScalar(n)},e.getForwardVector=function(e,t,n){return e.getWorldDirection(t),t.y=0,t.normalize(),t.multiplyScalar(n)},e}(),f=function(){function e(){}return e.isMobile=function(){return console.log(navigator.userAgent),/Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},e}(),m=n(936),v=window.location.href,w=function(e){return e.startsWith("/")||(e="/"+e),v.endsWith("/")?"".concat(v.slice(0,-1)).concat(e):"".concat(v).concat(e)},b=(l=function(e,t){return l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},l(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),g=function(e){function t(){var t=e.call(this)||this;return t.collider=new m.s(new p.P(0,.35,0),new p.P(0,1,0),.35),document.addEventListener("keydown",(function(e){t.keyStates[e.code]=!0})),document.addEventListener("keyup",(function(e){t.keyStates[e.code]=!1})),document.addEventListener("mousedown",(function(){return document.body.requestPointerLock()})),document.body.addEventListener("mousemove",(function(e){document.pointerLockElement===document.body&&(u.camera.rotation.y-=e.movementX/500,u.camera.rotation.x-=e.movementY/500)})),(new h.E).load(w("assets/objects/sas__cs2_agent_model_red/scene.gltf"),(function(e){t.model=e.scene,t.model.scale.set(.6,.6,.6),u.scene.add(t.model),t.initialized=!0})),t}return b(t,e),t.prototype.controls=function(e){var t=e*(this.playerOnFloor,8);this.keyStates.KeyW&&this.velocity.add(y.getForwardVector(u.camera,this.direction,t)),this.keyStates.KeyS&&this.velocity.add(y.getForwardVector(u.camera,this.direction,-t)),this.keyStates.KeyA&&this.velocity.add(y.getSideVector(u.camera,this.direction,-t)),this.keyStates.KeyD&&this.velocity.add(y.getSideVector(u.camera,this.direction,t))},t.prototype.updatePosition=function(e){var t=Math.exp(-4*e)-1;this.playerOnFloor||(this.velocity.y-=10*e,t*=.1),this.velocity.addScaledVector(this.velocity,t);var n=this.velocity.clone().multiplyScalar(e);this.collider.translate(n),u.camera.position.copy(this.collider.end)},t.prototype.updateCollision=function(e){var t=u.octree.capsuleIntersect(this.collider);this.playerOnFloor=!1,t&&(this.playerOnFloor=t.normal.y>0,this.playerOnFloor||this.velocity.addScaledVector(t.normal,-t.normal.dot(this.velocity)),this.collider.translate(t.normal.multiplyScalar(t.depth)))},t.prototype.update=function(e){if(this.initialized)for(var t=Math.min(.05,u.clock.getDelta())/5,n=0;n<5;n++)this.controls(t),this.updatePosition(t),this.updateCollision(t)},t}((function(){this.velocity=new p.P,this.direction=new p.P,this.keyStates={},this.playerOnFloor=!1,this.initialized=!1})),_=n(603),O=n(232),S=n(212),k=function(){function e(){var e=this;this.initialized=!1,u.scene.add(new _.M(16777215)),(new h.E).load(w("assets/objects/de_dust2_-_cs_map/scene.gltf"),(function(t){var n=t.scene,o=(new O.Z).setFromObject(n);n.position.sub(o.getCenter(new p.P)),n.traverse((function(e){e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0,e.material.map&&(e.material.map.anisotropy=4))})),e.octreeHelper=new S.u(u.octree),e.octreeHelper.visible=!1,u.octree.fromGraphNode(n),u.scene.add(n,e.octreeHelper),e.initialized=!0})),document.body.appendChild(u.renderer.domElement),window.addEventListener("resize",this._resize.bind(this))}return e.prototype._resize=function(){u.camera.aspect=window.innerWidth/window.innerHeight,u.camera.updateProjectionMatrix(),u.renderer.setSize(window.innerWidth,window.innerHeight)},e}(),P=n(694),z=function(){function e(){var e=this.createControlDiv();document.body.appendChild(e),P.create({zone:e,mode:"dynamic",position:{left:"50%",top:"50%"},color:"red"})}return e.prototype.createControlDiv=function(){var e=document.createElement("div");return e.id="dynamic",e.classList.add("zone"),e.classList.add("dynamic"),e.classList.add("active"),e},e}(),E=function(){f.isMobile()&&new z},M=1e3/60,j=0;new(function(){function e(){new E,this.world=new k,this.player=new g,u.renderer.setAnimationLoop(this._animate.bind(this))}return e.prototype._animate=function(e){var t=e-j;t>M&&(this.player.update(e),u.update(e),j=e-t%M)},e}())}},n={};function o(e){var i=n[e];if(void 0!==i)return i.exports;var r=n[e]={exports:{}};return t[e](r,r.exports,o),r.exports}o.m=t,e=[],o.O=(t,n,i,r)=>{if(!n){var a=1/0;for(l=0;l<e.length;l++){for(var[n,i,r]=e[l],c=!0,s=0;s<n.length;s++)(!1&r||a>=r)&&Object.keys(o.O).every((e=>o.O[e](n[s])))?n.splice(s--,1):(c=!1,r<a&&(a=r));if(c){e.splice(l--,1);var d=i();void 0!==d&&(t=d)}}return t}r=r||0;for(var l=e.length;l>0&&e[l-1][2]>r;l--)e[l]=e[l-1];e[l]=[n,i,r]},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};o.O.j=t=>0===e[t];var t=(t,n)=>{var i,r,[a,c,s]=n,d=0;if(a.some((t=>0!==e[t]))){for(i in c)o.o(c,i)&&(o.m[i]=c[i]);if(s)var l=s(o)}for(t&&t(n);d<a.length;d++)r=a[d],o.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return o.O(l)},n=self.webpackChunkcounter_strike_1_6=self.webpackChunkcounter_strike_1_6||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var i=o.O(void 0,[225],(()=>o(828)));i=o.O(i)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,